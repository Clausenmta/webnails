
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://vqnvjmllbmzwmkfvgxvo.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZxbnZqbWxsYm16d21rZnZneHZvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ4MzEwMzIsImV4cCI6MjA2MDQwNzAzMn0.jkEWqvGPLZGgOcJ3Stfnc2t-nJ5ymFv7ZGSQTYXAdII";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storage: localStorage,
    storageKey: 'supabase_auth_token',
    detectSessionInUrl: true,
  }
});

// Log to help debugging
supabase.auth.onAuthStateChange((event, session) => {
  console.log('Evento de autenticación:', event, session ? 'Usuario autenticado' : 'Sin sesión');
});

// Helper to check if a session is active and refresh it
export const getActiveSession = async () => {
  try {
    // Get current session
    const { data: { session } } = await supabase.auth.getSession();
    
    // If there's a session, try to refresh it
    if (session) {
      const { error: refreshError } = await supabase.auth.refreshSession();
      if (refreshError) {
        console.warn("Error al refrescar la sesión:", refreshError.message);
      }
    }
    
    return session;
  } catch (error) {
    console.error("Error getting/refreshing session:", error);
    return null;
  }
};
